from PIL import Image

# grid data
data = "1,1,1,1,1,1,2,2,0,0,1,1,0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,1,1,0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,2,2,0,0,2,2,2,2,0,0,1,1,0,0,1,1,0,0,0,0,2,2,0,0,0,0,1,1,0,0,2,2,2,2,0,0,1,1,0,0,0,0,0,0,0,0,2,2,0,0,0,0,1,1,0,0,0,0,2,2,0,0,1,1,0,0,0,0,0,0,1,1,0,0,2,2,1,1,0,0,0,0,0,0,2,2,0,0,1,1,0,0,0,0,0,0,1,1,0,0,2,2,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,1,1,1,1,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,1,1,1,1,0,0,2,2,0,0,0,0,0,0,0,0,2,2,0,0,0,1,0,0,0,0,1,1,1,1,0,0,1,1,1,1,0,0,0,0,0,0,2,2,0,0,0,1,0,0,0,0,1,1,1,1,0,0,1,1,1,1,0,0,2,2,0,0,2,2,0,0,0,0,1,1,0,0,2,2,0,0,0,0,2,2,1,1,0,0,2,2,0,0,2,2,0,0,0,0,1,1,0,0,2,2,0,0,0,0,2,2,1,1,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,1,1,2,2,0,0,0,0,0,0,0,0,1,1,1,1,0,0,1,1,0,0,0,0,0,0,1,1,2,2,0,0,0,0,0,0,2,2,1,1,1,1,0,0,1,1,1,1,0,0,0,1,1,1,0,0,0,0,1,1,0,0,2,2,1,1,1,1,0,0,1,1,1,1,0,0,0,1,1,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,2,2,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,2,2,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,1,1,0,0,1,1,1,1,2,2,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,1,1,1,1,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,2,2,0,0,0,0,1,1,0,0,1,1,1,1,0,0,0,1,1,1,1,0,0,0,1,1,2,2,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,1,1,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,1,1,1,1,1,0,0"
row = 26
col = 26
img = [None] * 4

# Offset to put thumbnails x and y pos
offset = (30, 13)
thumbnail_size = 19

# final_img = Image.new("RGB", size, (255,255,255))
final_img = Image.open("Tiles/bg_green.png")
base_img = Image.open("Tiles/base.png")
base_img.thumbnail((40, 40))
out_data = data.split(",")
for i in range(1, 4):
        img[i] = Image.open("Tiles/" + str(i) + ".png")
        img[i].thumbnail( (thumbnail_size, thumbnail_size) )
pass

counter = 0
for r in range(0, 26):
    for c in range(0, 26):
        pointer = int(out_data[counter] )
        counter+=1
        if (pointer!= 0) :
                final_img.paste( img[pointer], ((c * thumbnail_size) + 30, (r * thumbnail_size) + 13))
        if (r == 24 and c == 12):
                final_img.paste( base_img, ( (c * thumbnail_size) + 30, (r * thumbnail_size) + 13) )
pass

final_img.save('thumbnail.png')
final_img.show()